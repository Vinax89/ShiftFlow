
name: APIsec DAST

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  schedule:
    - cron: '15 13 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write   # for SARIF upload
  actions: read            # required for upload-sarif in private repos

concurrency:
  group: apisec-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  scan:
    name: Scan APIs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare artifacts dir
        run: mkdir -p ./.artifacts

      - name: Decide execution mode (fork-safe)
        id: gate
        shell: bash
        run: |
          IS_FORK=$([ "${{ github.event_name }}" = "pull_request" ] && [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ] && echo true || echo false)
          HAS_SECRETS=$([ -n "${{ secrets.APISEC_USERNAME }}" ] && [ -n "${{ secrets.APISEC_PASSWORD }}" ] && echo true || echo false)
          if [ "$IS_FORK" = false ] && [ "$HAS_SECRETS" = true ]; then
            echo "run_real=true" >> "$GITHUB_OUTPUT"
          else
            echo "run_real=false" >> "$GITHUB_OUTPUT"
          fi

      - name: APIsec scan (real)
        if: steps.gate.outputs.run_real == 'true'
        uses: apisec-inc/apisec-run-scan@8f66ce948afb779712a1d57ecb0a528d7ded5a45
        with:
          apisec-username: ${{ secrets.APISEC_USERNAME }}
          apisec-password: ${{ secrets.APISEC_PASSWORD }}
          # Optionally set a repo variable `APISEC_PROJECT`; fallback keeps example default
          apisec-project: ${{ vars.APISEC_PROJECT || 'VAmPI' }}
          sarif-result-file: ./.artifacts/apisec-results.sarif

      - name: Create informational SARIF (forks/no-secrets)
        if: steps.gate.outputs.run_real != 'true'
        shell: bash
        run: |
          cat > ./.artifacts/apisec-results.sarif <<'SARIF'
          {
            "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
            "version": "2.1.0",
            "runs": [
              {
                "tool": { "driver": { "name": "apisec-placeholder", "version": "0" } },
                "results": [],
                "invocations": [ { "executionSuccessful": true, "properties": { "note": "Fork or no secrets: generated empty SARIF" } } ]
              }
            ]
          }
          SARIF

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./.artifacts/apisec-results.sarif
